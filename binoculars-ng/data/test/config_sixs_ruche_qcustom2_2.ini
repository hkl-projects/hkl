### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#type = singlecore # run local
ncores = 16 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = ech6eiger_{first}-{last}.hdf5
overwrite = false

### choose an appropriate INPUT class and specify custom options
[input]##
type = sixs:gisaxuhveiger  # refers to class Sixs in BINoculars/backends/sixs.py

nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2021/Run3/20201559_andreazza/Pt2Ag20S2_75/

## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 966, 618   # x,y
sdd = 1.148           # sample to detector distance (m)
detrot = 0
# attenuation_coefficient = 1.742
maskmatrix = /nfs/ruche-sixs/sixs-soleil/com-sixs/2021/Run3/20201559_Andreazza/binoculars/mask1.npy
## choose PROJECTION plus resolution
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]

type = qcustom2
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py

resolution = 0.001, 0.001, 0.001
#resolution = 0.008, 0.008, 0.01  # or just give 1 number for all dimensions
#limits = [-3.53:-1.68,-0.59:0.68,0.98:1.06]
subprojection = qx_qy_qz

#omega_offset = 0
#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh
