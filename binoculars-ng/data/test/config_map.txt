### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
ncores = 11 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = sample1_{first}-{last}.hdf5
overwrite = False

### choose an appropriate INPUT class and specify custom options
[input]
type = sixs:flymedv  # refers to class Sixs in BINoculars/backends/sixs.py

nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2020/Run1/20190508_Resta/align/
## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100 

# technical data for this particular input class
centralpixel = 280, 163   # x,y 
sdd = 1.185          # sample to detector distance (m)
detrot = 90.0
attenuation_coefficient = 3.85
maskmatrix = mask_nxs00067_20200123_14h26.npy
### choose PROJECTION plus resolution
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]

#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py

resolution = 0.01
#resolution = 0.008, 0.008, 0.01  # or just give 1 number for all dimensions
#limits = [-3.53:-1.68,-0.59:0.68,0.98:1.06]

omega_offset = 0 
#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh
