### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
cores = 10 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = IOBTO_54A_{first}-{last}.hdf5
overwrite = True

### choose an appropriate INPUT class and specify custom options
[input]##
#type = sixs:flyscanuhv  # refers to class Sixs in BINoculars/backends/sixs.py
type = sixs:sbsmedv
nexusdir = /nfs/ruche/sixs-soleil/com-sixs/2020/Run3/20200472_Barbier/
inputrange=114

## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 277, 152   # x,y
sdd = 1.146              # sample to detector distance (m)
detrot = 90
#attenuation_coefficient = 2.43
maskmatrix = /nfs/ruche/sixs-soleil/com-sixs/2020/Run3/20200472_Barbier/mask_nxs00018_20200722_10h28.npy
### choose PROJECTION plus resolution
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxpolarprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
resolution = 0.0015
#resolution = 0.00005, 0.001, 0.0015  # or just give 1 number for all dimensions
#limits = [-.01:0,-.25:.001,:]

#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh
