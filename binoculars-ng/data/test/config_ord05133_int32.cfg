### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#type = singlecore # run local
ncores = 16 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = scan_{first}-{last}.hdf5
overwrite = false

### choose an appropriate INPUT class and specify custom options
[input]##
type = sixs:FlyMedH# refers to class Sixs in BINoculars/backends/sixs.py

nexusdir = /nfs/ruche/sixs-soleil/com-sixs/2021/Run4/20210628_Torrelles/align/


## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 277, 94   # x,y
sdd = 1.19206          # sample to detector distance (m)
detrot = 90.0
attenuation_coefficient = 2.273
maskmatrix = /nfs/ruche/sixs-soleil/com-sixs/2021/Run4/20210628_Torrelles/align1/mask_nxs01559_20211008_18h00.npy
## choose PROJECTION plus resolution
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]

#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py



resolution = 0.005
#resolution = 0.008, 0.008, 0.01  # or just give 1 number for all dimensions
#limits = [-3.53:-1.68,-0.59:0.68,0.98:1.06]

#omega_offset = 0
#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh
