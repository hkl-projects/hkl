### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#ncores = 16 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = Al13Co4_facets_res_0.01_0.01_0.01_HK_4.7_5_{first}-{last}.hdf5
overwrite = false

### choose an appropriate INPUT class and specify custom options
[input]
type = sixs:flyscanuhv2  # refers to class Sixs in BINoculars/backends/sixs.py
nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2018/Run3/Corentin/Al13Co4
inputrange = 4-5
#inputrange = 4-137

## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 293, 141   # x,y
sdd = 1.1083              # sample to detector distance (m)
detrot = 90.0
attenuation_coefficient = 1.825
maskmatrix = /nfs/ruche-sixs/sixs-soleil/com-sixs/2018/Run3/Corentin/Al13Co4/binoculars/mask8.npy

# sample parameters
b = 8.158
c = 12.342
a = 14.452
alpha = 90
beta = 90
gamma = 90
ux = -81.1851429358#-89.9993
uy = 53.8639343369#0.358824
uz = -10.9176636031#-6.41283

## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
resolution = 0.01, 0.01, 0.01
limits = [4.45:4.95,4.75:5.25,:]
