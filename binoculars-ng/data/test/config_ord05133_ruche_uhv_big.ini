### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#type = singlecore # run local
ncores = 16 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = GaPd2_Sn4_Qxyz_{first}-{last}.hdf5
overwrite = false

### choose an appropriate INPUT class and specify custom options
[input]##
type = sixs:flyscanuhv2 # refers to class Sixs in BINoculars/backends/sixs.py

nexusdir = /nfs/ruche/sixs-soleil/com-sixs/2021/Run5/20210079_Emilie/GaPd2_210_Sn4
inputrange=132-185

#a=6.2831853
#b=6.2831853
#c=6.2831853
#alpha=90
#beta=90
#gamma=90
#ux=-90.2
#uy=0.8
#uz=-4.2

## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 287, 163   # x,y
sdd = 1.162          # sample to detector distance (m)
detrot = 90.0
attenuation_coefficient = 1.744
maskmatrix = /nfs/ruche/sixs-soleil/com-sixs/2021/Run5/20210079_Emilie/GaPd2_210_Sn4/binoculars/mask_nxs00134_20211111_17h04.npy
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]

#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py

resolution = 0.02, 0.02, 0.02
#resolution = 0.002, 0.002, 0.004  # or just give 1 number for all dimensions
#limits = [0.7:1,-1.6:-1.3,:]

#omega_offset = 0
#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh


# expected
# qx -5.46 5.46  547
# qy -5.46 5.46  547
# qz -0.04 1.46  76